// Copyright 2016-2019 Envoy Project Authors
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy_wasm_intrinsics_lite.proto
// Protobuf C++ Version: 5.26.1

#include "proxy_wasm_intrinsics_lite.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr GrpcService_HeaderValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_HeaderValue::GrpcService_HeaderValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_HeaderValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_HeaderValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_HeaderValueDefaultTypeInternal() {}
  union {
    GrpcService_HeaderValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_HeaderValueDefaultTypeInternal _GrpcService_HeaderValue_default_instance_;

inline constexpr GrpcService_GoogleGrpc_GoogleLocalCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_GoogleLocalCredentials::GrpcService_GoogleGrpc_GoogleLocalCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_GoogleLocalCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_GoogleLocalCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_GoogleLocalCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_GoogleLocalCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_GoogleLocalCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_GoogleLocalCredentials_default_instance_;

inline constexpr GrpcService_GoogleGrpc_Empty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_Empty::GrpcService_GoogleGrpc_Empty(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_EmptyDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_EmptyDefaultTypeInternal _GrpcService_GoogleGrpc_Empty_default_instance_;

inline constexpr GrpcService_GoogleGrpc_CallCredentials_StsService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_exchange_service_uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resource_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        audience_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scope_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requested_token_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_token_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_token_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        actor_token_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        actor_token_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_StsService::GrpcService_GoogleGrpc_CallCredentials_StsService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_CallCredentials_StsServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_StsServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_CallCredentials_StsServiceDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_CallCredentials_StsService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_CallCredentials_StsServiceDefaultTypeInternal _GrpcService_GoogleGrpc_CallCredentials_StsService_default_instance_;

inline constexpr GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : json_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_lifetime_seconds_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_default_instance_;

inline constexpr GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : authorization_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authority_selector_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_default_instance_;

inline constexpr GrpcService_EnvoyGrpc::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cluster_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_EnvoyGrpc::GrpcService_EnvoyGrpc(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_EnvoyGrpcDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_EnvoyGrpcDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_EnvoyGrpcDefaultTypeInternal() {}
  union {
    GrpcService_EnvoyGrpc _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_EnvoyGrpcDefaultTypeInternal _GrpcService_EnvoyGrpc_default_instance_;

inline constexpr DataSource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR DataSource::DataSource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataSourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataSourceDefaultTypeInternal() {}
  union {
    DataSource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataSourceDefaultTypeInternal _DataSource_default_instance_;

inline constexpr Any::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Any::Any(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AnyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnyDefaultTypeInternal() {}
  union {
    Any _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnyDefaultTypeInternal _Any_default_instance_;

inline constexpr WKT::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        struct__{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WKT::WKT(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WKTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WKTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WKTDefaultTypeInternal() {}
  union {
    WKT _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WKTDefaultTypeInternal _WKT_default_instance_;

inline constexpr GrpcService_GoogleGrpc_SslCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        root_certs_{nullptr},
        private_key_{nullptr},
        cert_chain_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_SslCredentials::GrpcService_GoogleGrpc_SslCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_SslCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_SslCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_SslCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_SslCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_SslCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_SslCredentials_default_instance_;

inline constexpr GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPluginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPluginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPluginDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPluginDefaultTypeInternal _GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_default_instance_;

inline constexpr GrpcService_GoogleGrpc_ChannelCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_ChannelCredentials::GrpcService_GoogleGrpc_ChannelCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_ChannelCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_ChannelCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_ChannelCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_ChannelCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_ChannelCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_ChannelCredentials_default_instance_;

inline constexpr GrpcService_GoogleGrpc_CallCredentials::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentials::GrpcService_GoogleGrpc_CallCredentials(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpc_CallCredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc_CallCredentialsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpc_CallCredentialsDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc_CallCredentials _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpc_CallCredentialsDefaultTypeInternal _GrpcService_GoogleGrpc_CallCredentials_default_instance_;

inline constexpr GrpcService_GoogleGrpc::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        call_credentials_{},
        target_uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stat_prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        credentials_factory_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_credentials_{nullptr},
        config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService_GoogleGrpc::GrpcService_GoogleGrpc(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcService_GoogleGrpcDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcService_GoogleGrpcDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcService_GoogleGrpcDefaultTypeInternal() {}
  union {
    GrpcService_GoogleGrpc _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcService_GoogleGrpcDefaultTypeInternal _GrpcService_GoogleGrpc_default_instance_;

inline constexpr GrpcService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : initial_metadata_{},
        target_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GrpcService::GrpcService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GrpcServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrpcServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrpcServiceDefaultTypeInternal() {}
  union {
    GrpcService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrpcServiceDefaultTypeInternal _GrpcService_default_instance_;
// ===================================================================

class WKT::_Internal {
 public:
  using HasBits = decltype(std::declval<WKT>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WKT, _impl_._has_bits_);
};

void WKT::clear_struct_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.struct__ != nullptr) _impl_.struct__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
WKT::WKT(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WKT)
}
inline PROTOBUF_NDEBUG_INLINE WKT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WKT::WKT(
    ::google::protobuf::Arena* arena,
    const WKT& from)
    : ::google::protobuf::MessageLite(arena) {
  WKT* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.struct__ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(
                              arena, *from._impl_.struct__)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:WKT)
}
inline PROTOBUF_NDEBUG_INLINE WKT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WKT::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.struct__ = {};
}
WKT::~WKT() {
  // @@protoc_insertion_point(destructor:WKT)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void WKT::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.struct__;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
WKT::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[4];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(WKT, _impl_._cached_size_),
          true,
      },
      "WKT",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void WKT::Clear() {
// @@protoc_insertion_point(message_clear_start:WKT)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.struct__ != nullptr);
    _impl_.struct__->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* WKT::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WKT::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WKT, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WKT_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::WKT>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Struct struct = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WKT, _impl_.struct__)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Struct struct = 1;
    {PROTOBUF_FIELD_OFFSET(WKT, _impl_.struct__), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Struct>()},
  }}, {{
  }},
};

::uint8_t* WKT::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WKT)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Struct struct = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.struct__, _impl_.struct__->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WKT)
  return target;
}

::size_t WKT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WKT)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.struct__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void WKT::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const WKT*>(
      &from));
}

void WKT::MergeFrom(const WKT& from) {
  WKT* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:WKT)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.struct__ != nullptr);
    if (_this->_impl_.struct__ == nullptr) {
      _this->_impl_.struct__ =
          ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(arena, *from._impl_.struct__);
    } else {
      _this->_impl_.struct__->MergeFrom(*from._impl_.struct__);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void WKT::CopyFrom(const WKT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WKT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WKT::IsInitialized() const {
  return true;
}

void WKT::InternalSwap(WKT* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.struct__, other->_impl_.struct__);
}

// ===================================================================

class DataSource::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::DataSource, _impl_._oneof_case_);
};

DataSource::DataSource(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DataSource)
}
inline PROTOBUF_NDEBUG_INLINE DataSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : specifier_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

DataSource::DataSource(
    ::google::protobuf::Arena* arena,
    const DataSource& from)
    : ::google::protobuf::MessageLite(arena) {
  DataSource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (specifier_case()) {
    case SPECIFIER_NOT_SET:
      break;
      case kFilename:
        new (&_impl_.specifier_.filename_) decltype(_impl_.specifier_.filename_){arena, from._impl_.specifier_.filename_};
        break;
      case kInlineBytes:
        new (&_impl_.specifier_.inline_bytes_) decltype(_impl_.specifier_.inline_bytes_){arena, from._impl_.specifier_.inline_bytes_};
        break;
      case kInlineString:
        new (&_impl_.specifier_.inline_string_) decltype(_impl_.specifier_.inline_string_){arena, from._impl_.specifier_.inline_string_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:DataSource)
}
inline PROTOBUF_NDEBUG_INLINE DataSource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void DataSource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataSource::~DataSource() {
  // @@protoc_insertion_point(destructor:DataSource)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void DataSource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_specifier()) {
    clear_specifier();
  }
  _impl_.~Impl_();
}

void DataSource::clear_specifier() {
// @@protoc_insertion_point(one_of_clear_start:DataSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (specifier_case()) {
    case kFilename: {
      _impl_.specifier_.filename_.Destroy();
      break;
    }
    case kInlineBytes: {
      _impl_.specifier_.inline_bytes_.Destroy();
      break;
    }
    case kInlineString: {
      _impl_.specifier_.inline_string_.Destroy();
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SPECIFIER_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
DataSource::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[11];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(DataSource, _impl_._cached_size_),
          true,
      },
      "DataSource",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:DataSource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_specifier();
  _internal_metadata_.Clear<std::string>();
}

const char* DataSource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 40, 2> DataSource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataSource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DataSource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(DataSource, _impl_.specifier_.filename_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes inline_bytes = 2;
    {PROTOBUF_FIELD_OFFSET(DataSource, _impl_.specifier_.inline_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string inline_string = 3;
    {PROTOBUF_FIELD_OFFSET(DataSource, _impl_.specifier_.inline_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\10\0\15\0\0\0\0"
    "DataSource"
    "filename"
    "inline_string"
  }},
};

::uint8_t* DataSource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataSource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (specifier_case()) {
    case kFilename: {
      const std::string& _s = this->_internal_filename();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DataSource.filename");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kInlineBytes: {
      const std::string& _s = this->_internal_inline_bytes();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
      break;
    }
    case kInlineString: {
      const std::string& _s = this->_internal_inline_string();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DataSource.inline_string");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataSource)
  return target;
}

::size_t DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataSource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (specifier_case()) {
    // string filename = 1;
    case kFilename: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_filename());
      break;
    }
    // bytes inline_bytes = 2;
    case kInlineBytes: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_inline_bytes());
      break;
    }
    // string inline_string = 3;
    case kInlineString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void DataSource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const DataSource*>(
      &from));
}

void DataSource::MergeFrom(const DataSource& from) {
  DataSource* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:DataSource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_specifier();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFilename: {
        if (oneof_needs_init) {
          _this->_impl_.specifier_.filename_.InitDefault();
        }
        _this->_impl_.specifier_.filename_.Set(from._internal_filename(), arena);
        break;
      }
      case kInlineBytes: {
        if (oneof_needs_init) {
          _this->_impl_.specifier_.inline_bytes_.InitDefault();
        }
        _this->_impl_.specifier_.inline_bytes_.Set(from._internal_inline_bytes(), arena);
        break;
      }
      case kInlineString: {
        if (oneof_needs_init) {
          _this->_impl_.specifier_.inline_string_.InitDefault();
        }
        _this->_impl_.specifier_.inline_string_.Set(from._internal_inline_string(), arena);
        break;
      }
      case SPECIFIER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void DataSource::CopyFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataSource::IsInitialized() const {
  return true;
}

void DataSource::InternalSwap(DataSource* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.specifier_, other->_impl_.specifier_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class Any::_Internal {
 public:
};

Any::Any(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Any)
}
inline PROTOBUF_NDEBUG_INLINE Any::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : type_url_(arena, from.type_url_),
        value_(arena, from.value_),
        _cached_size_{0} {}

Any::Any(
    ::google::protobuf::Arena* arena,
    const Any& from)
    : ::google::protobuf::MessageLite(arena) {
  Any* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Any)
}
inline PROTOBUF_NDEBUG_INLINE Any::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_url_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void Any::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Any::~Any() {
  // @@protoc_insertion_point(destructor:Any)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Any::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_url_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Any::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[4];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(Any, _impl_._cached_size_),
          true,
      },
      "Any",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void Any::Clear() {
// @@protoc_insertion_point(message_clear_start:Any)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_url_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Any::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 20, 2> Any::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Any_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Any>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Any, _impl_.value_)}},
    // string type_url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Any, _impl_.type_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type_url = 1;
    {PROTOBUF_FIELD_OFFSET(Any, _impl_.type_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(Any, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\3\10\0\0\0\0\0\0"
    "Any"
    "type_url"
  }},
};

::uint8_t* Any::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Any)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type_url = 1;
  if (!this->_internal_type_url().empty()) {
    const std::string& _s = this->_internal_type_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Any.type_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Any)
  return target;
}

::size_t Any::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Any)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type_url = 1;
  if (!this->_internal_type_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type_url());
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Any::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Any*>(
      &from));
}

void Any::MergeFrom(const Any& from) {
  Any* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Any)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type_url().empty()) {
    _this->_internal_set_type_url(from._internal_type_url());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Any::CopyFrom(const Any& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Any)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Any::IsInitialized() const {
  return true;
}

void Any::InternalSwap(Any* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_url_, &other->_impl_.type_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

// ===================================================================

class GrpcService_EnvoyGrpc::_Internal {
 public:
};

GrpcService_EnvoyGrpc::GrpcService_EnvoyGrpc(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.EnvoyGrpc)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_EnvoyGrpc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cluster_name_(arena, from.cluster_name_),
        _cached_size_{0} {}

GrpcService_EnvoyGrpc::GrpcService_EnvoyGrpc(
    ::google::protobuf::Arena* arena,
    const GrpcService_EnvoyGrpc& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_EnvoyGrpc* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GrpcService.EnvoyGrpc)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_EnvoyGrpc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cluster_name_(arena),
        _cached_size_{0} {}

inline void GrpcService_EnvoyGrpc::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_EnvoyGrpc::~GrpcService_EnvoyGrpc() {
  // @@protoc_insertion_point(destructor:GrpcService.EnvoyGrpc)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_EnvoyGrpc::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.cluster_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_EnvoyGrpc::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[22];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_EnvoyGrpc, _impl_._cached_size_),
          true,
      },
      "GrpcService.EnvoyGrpc",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_EnvoyGrpc::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.EnvoyGrpc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cluster_name_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_EnvoyGrpc::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> GrpcService_EnvoyGrpc::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_EnvoyGrpc_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_EnvoyGrpc>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string cluster_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_EnvoyGrpc, _impl_.cluster_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cluster_name = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_EnvoyGrpc, _impl_.cluster_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\14\0\0\0\0\0\0"
    "GrpcService.EnvoyGrpc"
    "cluster_name"
  }},
};

::uint8_t* GrpcService_EnvoyGrpc::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.EnvoyGrpc)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string cluster_name = 1;
  if (!this->_internal_cluster_name().empty()) {
    const std::string& _s = this->_internal_cluster_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.EnvoyGrpc.cluster_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.EnvoyGrpc)
  return target;
}

::size_t GrpcService_EnvoyGrpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.EnvoyGrpc)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (!this->_internal_cluster_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cluster_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_EnvoyGrpc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_EnvoyGrpc*>(
      &from));
}

void GrpcService_EnvoyGrpc::MergeFrom(const GrpcService_EnvoyGrpc& from) {
  GrpcService_EnvoyGrpc* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.EnvoyGrpc)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cluster_name().empty()) {
    _this->_internal_set_cluster_name(from._internal_cluster_name());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_EnvoyGrpc::CopyFrom(const GrpcService_EnvoyGrpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.EnvoyGrpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_EnvoyGrpc::IsInitialized() const {
  return true;
}

void GrpcService_EnvoyGrpc::InternalSwap(GrpcService_EnvoyGrpc* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cluster_name_, &other->_impl_.cluster_name_, arena);
}

// ===================================================================

class GrpcService_GoogleGrpc_SslCredentials::_Internal {
 public:
  using HasBits = decltype(std::declval<GrpcService_GoogleGrpc_SslCredentials>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_._has_bits_);
};

GrpcService_GoogleGrpc_SslCredentials::GrpcService_GoogleGrpc_SslCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.SslCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_SslCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GrpcService_GoogleGrpc_SslCredentials::GrpcService_GoogleGrpc_SslCredentials(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_SslCredentials& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_SslCredentials* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.root_certs_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(
                              arena, *from._impl_.root_certs_)
                        : nullptr;
  _impl_.private_key_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(
                              arena, *from._impl_.private_key_)
                        : nullptr;
  _impl_.cert_chain_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(
                              arena, *from._impl_.cert_chain_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.SslCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_SslCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_SslCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, root_certs_),
           0,
           offsetof(Impl_, cert_chain_) -
               offsetof(Impl_, root_certs_) +
               sizeof(Impl_::cert_chain_));
}
GrpcService_GoogleGrpc_SslCredentials::~GrpcService_GoogleGrpc_SslCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.SslCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_SslCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.root_certs_;
  delete _impl_.private_key_;
  delete _impl_.cert_chain_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_SslCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[38];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.SslCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_SslCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.SslCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.root_certs_ != nullptr);
      _impl_.root_certs_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.private_key_ != nullptr);
      _impl_.private_key_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.cert_chain_ != nullptr);
      _impl_.cert_chain_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_SslCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> GrpcService_GoogleGrpc_SslCredentials::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_GoogleGrpc_SslCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_SslCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .DataSource root_certs = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.root_certs_)}},
    // .DataSource private_key = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.private_key_)}},
    // .DataSource cert_chain = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.cert_chain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DataSource root_certs = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.root_certs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DataSource private_key = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.private_key_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .DataSource cert_chain = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.cert_chain_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DataSource>()},
    {::_pbi::TcParser::GetTable<::DataSource>()},
    {::_pbi::TcParser::GetTable<::DataSource>()},
  }}, {{
  }},
};

::uint8_t* GrpcService_GoogleGrpc_SslCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.SslCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .DataSource root_certs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.root_certs_, _impl_.root_certs_->GetCachedSize(), target, stream);
  }

  // .DataSource private_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.private_key_, _impl_.private_key_->GetCachedSize(), target, stream);
  }

  // .DataSource cert_chain = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.cert_chain_, _impl_.cert_chain_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.SslCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_SslCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.SslCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .DataSource root_certs = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.root_certs_);
    }

    // .DataSource private_key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.private_key_);
    }

    // .DataSource cert_chain = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cert_chain_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_SslCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_SslCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_SslCredentials::MergeFrom(const GrpcService_GoogleGrpc_SslCredentials& from) {
  GrpcService_GoogleGrpc_SslCredentials* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.SslCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.root_certs_ != nullptr);
      if (_this->_impl_.root_certs_ == nullptr) {
        _this->_impl_.root_certs_ =
            ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(arena, *from._impl_.root_certs_);
      } else {
        _this->_impl_.root_certs_->MergeFrom(*from._impl_.root_certs_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.private_key_ != nullptr);
      if (_this->_impl_.private_key_ == nullptr) {
        _this->_impl_.private_key_ =
            ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(arena, *from._impl_.private_key_);
      } else {
        _this->_impl_.private_key_->MergeFrom(*from._impl_.private_key_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.cert_chain_ != nullptr);
      if (_this->_impl_.cert_chain_ == nullptr) {
        _this->_impl_.cert_chain_ =
            ::google::protobuf::MessageLite::CopyConstruct<::DataSource>(arena, *from._impl_.cert_chain_);
      } else {
        _this->_impl_.cert_chain_->MergeFrom(*from._impl_.cert_chain_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_SslCredentials::CopyFrom(const GrpcService_GoogleGrpc_SslCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.SslCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_SslCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_SslCredentials::InternalSwap(GrpcService_GoogleGrpc_SslCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.cert_chain_)
      + sizeof(GrpcService_GoogleGrpc_SslCredentials::_impl_.cert_chain_)
      - PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_SslCredentials, _impl_.root_certs_)>(
          reinterpret_cast<char*>(&_impl_.root_certs_),
          reinterpret_cast<char*>(&other->_impl_.root_certs_));
}

// ===================================================================

class GrpcService_GoogleGrpc_GoogleLocalCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_GoogleLocalCredentials::GrpcService_GoogleGrpc_GoogleLocalCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.GoogleLocalCredentials)
}
GrpcService_GoogleGrpc_GoogleLocalCredentials::GrpcService_GoogleGrpc_GoogleLocalCredentials(
    ::google::protobuf::Arena* arena, const GrpcService_GoogleGrpc_GoogleLocalCredentials& from)
    : GrpcService_GoogleGrpc_GoogleLocalCredentials(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_GoogleLocalCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_GoogleLocalCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_GoogleLocalCredentials::~GrpcService_GoogleGrpc_GoogleLocalCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_GoogleLocalCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_GoogleLocalCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[46];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_GoogleLocalCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.GoogleLocalCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_GoogleLocalCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_GoogleLocalCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GrpcService_GoogleGrpc_GoogleLocalCredentials::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_GoogleGrpc_GoogleLocalCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_GoogleLocalCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* GrpcService_GoogleGrpc_GoogleLocalCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_GoogleLocalCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_GoogleLocalCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::MergeFrom(const GrpcService_GoogleGrpc_GoogleLocalCredentials& from) {
  GrpcService_GoogleGrpc_GoogleLocalCredentials* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::CopyFrom(const GrpcService_GoogleGrpc_GoogleLocalCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_GoogleLocalCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::InternalSwap(GrpcService_GoogleGrpc_GoogleLocalCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

// ===================================================================

class GrpcService_GoogleGrpc_Empty::_Internal {
 public:
};

GrpcService_GoogleGrpc_Empty::GrpcService_GoogleGrpc_Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.Empty)
}
GrpcService_GoogleGrpc_Empty::GrpcService_GoogleGrpc_Empty(
    ::google::protobuf::Arena* arena, const GrpcService_GoogleGrpc_Empty& from)
    : GrpcService_GoogleGrpc_Empty(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_Empty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_Empty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_Empty::~GrpcService_GoogleGrpc_Empty() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.Empty)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_Empty::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_Empty::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[29];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_Empty, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.Empty",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.Empty)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_Empty::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GrpcService_GoogleGrpc_Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_GoogleGrpc_Empty_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* GrpcService_GoogleGrpc_Empty::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.Empty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.Empty)
  return target;
}

::size_t GrpcService_GoogleGrpc_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.Empty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_Empty::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_Empty*>(
      &from));
}

void GrpcService_GoogleGrpc_Empty::MergeFrom(const GrpcService_GoogleGrpc_Empty& from) {
  GrpcService_GoogleGrpc_Empty* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.Empty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_Empty::CopyFrom(const GrpcService_GoogleGrpc_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_Empty::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_Empty::InternalSwap(GrpcService_GoogleGrpc_Empty* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

// ===================================================================

class GrpcService_GoogleGrpc_ChannelCredentials::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GrpcService_GoogleGrpc_ChannelCredentials, _impl_._oneof_case_);
};

void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_ssl_credentials(::GrpcService_GoogleGrpc_SslCredentials* ssl_credentials) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (ssl_credentials) {
    ::google::protobuf::Arena* submessage_arena = ssl_credentials->GetArena();
    if (message_arena != submessage_arena) {
      ssl_credentials = ::google::protobuf::internal::GetOwnedMessage(message_arena, ssl_credentials, submessage_arena);
    }
    set_has_ssl_credentials();
    _impl_.credential_specifier_.ssl_credentials_ = ssl_credentials;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.ssl_credentials)
}
void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_google_default(::GrpcService_GoogleGrpc_Empty* google_default) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (google_default) {
    ::google::protobuf::Arena* submessage_arena = google_default->GetArena();
    if (message_arena != submessage_arena) {
      google_default = ::google::protobuf::internal::GetOwnedMessage(message_arena, google_default, submessage_arena);
    }
    set_has_google_default();
    _impl_.credential_specifier_.google_default_ = google_default;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.google_default)
}
void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_local_credentials(::GrpcService_GoogleGrpc_GoogleLocalCredentials* local_credentials) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (local_credentials) {
    ::google::protobuf::Arena* submessage_arena = local_credentials->GetArena();
    if (message_arena != submessage_arena) {
      local_credentials = ::google::protobuf::internal::GetOwnedMessage(message_arena, local_credentials, submessage_arena);
    }
    set_has_local_credentials();
    _impl_.credential_specifier_.local_credentials_ = local_credentials;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.local_credentials)
}
GrpcService_GoogleGrpc_ChannelCredentials::GrpcService_GoogleGrpc_ChannelCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.ChannelCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_ChannelCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GrpcService_GoogleGrpc_ChannelCredentials::GrpcService_GoogleGrpc_ChannelCredentials(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_ChannelCredentials& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_ChannelCredentials* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (credential_specifier_case()) {
    case CREDENTIAL_SPECIFIER_NOT_SET:
      break;
      case kSslCredentials:
        _impl_.credential_specifier_.ssl_credentials_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_SslCredentials>(arena, *from._impl_.credential_specifier_.ssl_credentials_);
        break;
      case kGoogleDefault:
        _impl_.credential_specifier_.google_default_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_Empty>(arena, *from._impl_.credential_specifier_.google_default_);
        break;
      case kLocalCredentials:
        _impl_.credential_specifier_.local_credentials_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_GoogleLocalCredentials>(arena, *from._impl_.credential_specifier_.local_credentials_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.ChannelCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_ChannelCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GrpcService_GoogleGrpc_ChannelCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_ChannelCredentials::~GrpcService_GoogleGrpc_ChannelCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.ChannelCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_ChannelCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_credential_specifier()) {
    clear_credential_specifier();
  }
  _impl_.~Impl_();
}

void GrpcService_GoogleGrpc_ChannelCredentials::clear_credential_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.ChannelCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (credential_specifier_case()) {
    case kSslCredentials: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.ssl_credentials_;
      }
      break;
    }
    case kGoogleDefault: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.google_default_;
      }
      break;
    }
    case kLocalCredentials: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.local_credentials_;
      }
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CREDENTIAL_SPECIFIER_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_ChannelCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[42];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_ChannelCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.ChannelCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_ChannelCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.ChannelCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credential_specifier();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_ChannelCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> GrpcService_GoogleGrpc_ChannelCredentials::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_GoogleGrpc_ChannelCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_ChannelCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_ChannelCredentials, _impl_.credential_specifier_.ssl_credentials_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc.Empty google_default = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_ChannelCredentials, _impl_.credential_specifier_.google_default_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_ChannelCredentials, _impl_.credential_specifier_.local_credentials_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_SslCredentials>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_Empty>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_GoogleLocalCredentials>()},
  }}, {{
  }},
};

::uint8_t* GrpcService_GoogleGrpc_ChannelCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.ChannelCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (credential_specifier_case()) {
    case kSslCredentials: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.credential_specifier_.ssl_credentials_, _impl_.credential_specifier_.ssl_credentials_->GetCachedSize(), target, stream);
      break;
    }
    case kGoogleDefault: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.credential_specifier_.google_default_, _impl_.credential_specifier_.google_default_->GetCachedSize(), target, stream);
      break;
    }
    case kLocalCredentials: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.credential_specifier_.local_credentials_, _impl_.credential_specifier_.local_credentials_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.ChannelCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_ChannelCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.ChannelCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (credential_specifier_case()) {
    // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
    case kSslCredentials: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.ssl_credentials_);
      break;
    }
    // .GrpcService.GoogleGrpc.Empty google_default = 2;
    case kGoogleDefault: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.google_default_);
      break;
    }
    // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
    case kLocalCredentials: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.local_credentials_);
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_ChannelCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_ChannelCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_ChannelCredentials::MergeFrom(const GrpcService_GoogleGrpc_ChannelCredentials& from) {
  GrpcService_GoogleGrpc_ChannelCredentials* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.ChannelCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_credential_specifier();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSslCredentials: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.ssl_credentials_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_SslCredentials>(arena, *from._impl_.credential_specifier_.ssl_credentials_);
        } else {
          _this->_impl_.credential_specifier_.ssl_credentials_->MergeFrom(from._internal_ssl_credentials());
        }
        break;
      }
      case kGoogleDefault: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.google_default_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_Empty>(arena, *from._impl_.credential_specifier_.google_default_);
        } else {
          _this->_impl_.credential_specifier_.google_default_->MergeFrom(from._internal_google_default());
        }
        break;
      }
      case kLocalCredentials: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.local_credentials_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_GoogleLocalCredentials>(arena, *from._impl_.credential_specifier_.local_credentials_);
        } else {
          _this->_impl_.credential_specifier_.local_credentials_->MergeFrom(from._internal_local_credentials());
        }
        break;
      }
      case CREDENTIAL_SPECIFIER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_ChannelCredentials::CopyFrom(const GrpcService_GoogleGrpc_ChannelCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.ChannelCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_ChannelCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_ChannelCredentials::InternalSwap(GrpcService_GoogleGrpc_ChannelCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.credential_specifier_, other->_impl_.credential_specifier_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : json_key_(arena, from.json_key_),
        _cached_size_{0} {}

GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.token_lifetime_seconds_ = from._impl_.token_lifetime_seconds_;

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : json_key_(arena),
        _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.token_lifetime_seconds_ = {};
}
GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::~GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.json_key_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[74];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.json_key_.ClearToEmpty();
  _impl_.token_lifetime_seconds_ = ::uint64_t{0u};
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 90, 2> GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 token_lifetime_seconds = 2;
    {::_pbi::TcParser::FastV64S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, _impl_.token_lifetime_seconds_)}},
    // string json_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, _impl_.json_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string json_key = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, _impl_.json_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 token_lifetime_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, _impl_.token_lifetime_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\111\10\0\0\0\0\0\0"
    "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials"
    "json_key"
  }},
};

::uint8_t* GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string json_key = 1;
  if (!this->_internal_json_key().empty()) {
    const std::string& _s = this->_internal_json_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials.json_key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 token_lifetime_seconds = 2;
  if (this->_internal_token_lifetime_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_token_lifetime_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string json_key = 1;
  if (!this->_internal_json_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_json_key());
  }

  // uint64 token_lifetime_seconds = 2;
  if (this->_internal_token_lifetime_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_token_lifetime_seconds());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from) {
  GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_json_key().empty()) {
    _this->_internal_set_json_key(from._internal_json_key());
  }
  if (from._internal_token_lifetime_seconds() != 0) {
    _this->_impl_.token_lifetime_seconds_ = from._impl_.token_lifetime_seconds_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.json_key_, &other->_impl_.json_key_, arena);
        swap(_impl_.token_lifetime_seconds_, other->_impl_.token_lifetime_seconds_);
}

// ===================================================================

class GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : authorization_token_(arena, from.authorization_token_),
        authority_selector_(arena, from.authority_selector_),
        _cached_size_{0} {}

GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : authorization_token_(arena),
        authority_selector_(arena),
        _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::~GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.authorization_token_.Destroy();
  _impl_.authority_selector_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[60];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authorization_token_.ClearToEmpty();
  _impl_.authority_selector_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 105, 2> GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string authority_selector = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, _impl_.authority_selector_)}},
    // string authorization_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, _impl_.authorization_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string authorization_token = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, _impl_.authorization_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string authority_selector = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, _impl_.authority_selector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\23\22\0\0\0\0\0"
    "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials"
    "authorization_token"
    "authority_selector"
  }},
};

::uint8_t* GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string authorization_token = 1;
  if (!this->_internal_authorization_token().empty()) {
    const std::string& _s = this->_internal_authorization_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authorization_token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string authority_selector = 2;
  if (!this->_internal_authority_selector().empty()) {
    const std::string& _s = this->_internal_authority_selector();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authority_selector");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorization_token = 1;
  if (!this->_internal_authorization_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_authorization_token());
  }

  // string authority_selector = 2;
  if (!this->_internal_authority_selector().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_authority_selector());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from) {
  GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authorization_token().empty()) {
    _this->_internal_set_authorization_token(from._internal_authorization_token());
  }
  if (!from._internal_authority_selector().empty()) {
    _this->_internal_set_authority_selector(from._internal_authority_selector());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authorization_token_, &other->_impl_.authorization_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authority_selector_, &other->_impl_.authority_selector_, arena);
}

// ===================================================================

class GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_._oneof_case_);
};

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::set_allocated_config(::google::protobuf::Struct* config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config_type();
  if (config) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(message_arena, config, submessage_arena);
    }
    set_has_config();
    _impl_.config_type_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.config)
}
void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::clear_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (config_type_case() == kConfig) {
    if (GetArena() == nullptr) {
      delete _impl_.config_type_.config_;
    }
    clear_has_config_type();
  }
}
void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::set_allocated_typed_config(::Any* typed_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config_type();
  if (typed_config) {
    ::google::protobuf::Arena* submessage_arena = typed_config->GetArena();
    if (message_arena != submessage_arena) {
      typed_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, typed_config, submessage_arena);
    }
    set_has_typed_config();
    _impl_.config_type_.typed_config_ = typed_config;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.typed_config)
}
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        config_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (config_type_case()) {
    case CONFIG_TYPE_NOT_SET:
      break;
      case kConfig:
        _impl_.config_type_.config_ = ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(arena, *from._impl_.config_type_.config_);
        break;
      case kTypedConfig:
        _impl_.config_type_.typed_config_ = ::google::protobuf::MessageLite::CopyConstruct<::Any>(arena, *from._impl_.config_type_.typed_config_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        config_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::~GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  if (has_config_type()) {
    clear_config_type();
  }
  _impl_.~Impl_();
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::clear_config_type() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (config_type_case()) {
    case kConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.config_type_.config_;
      }
      break;
    }
    case kTypedConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.config_type_.typed_config_;
      }
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[69];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  clear_config_type();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 81, 2> GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Struct config = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_.config_type_.config_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Any typed_config = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, _impl_.config_type_.typed_config_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Struct>()},
    {::_pbi::TcParser::GetTable<::Any>()},
  }}, {{
    "\104\4\0\0\0\0\0\0"
    "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin"
    "name"
  }},
};

::uint8_t* GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  switch (config_type_case()) {
    case kConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.config_type_.config_, _impl_.config_type_.config_->GetCachedSize(), target, stream);
      break;
    }
    case kTypedConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.config_type_.typed_config_, _impl_.config_type_.typed_config_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  return target;
}

::size_t GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  switch (config_type_case()) {
    // .google.protobuf.Struct config = 2 [deprecated = true];
    case kConfig: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_type_.config_);
      break;
    }
    // .Any typed_config = 3;
    case kTypedConfig: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_type_.typed_config_);
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from) {
  GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_config_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConfig: {
        if (oneof_needs_init) {
          _this->_impl_.config_type_.config_ =
              ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(arena, *from._impl_.config_type_.config_);
        } else {
          _this->_impl_.config_type_.config_->MergeFrom(from._internal_config());
        }
        break;
      }
      case kTypedConfig: {
        if (oneof_needs_init) {
          _this->_impl_.config_type_.typed_config_ =
              ::google::protobuf::MessageLite::CopyConstruct<::Any>(arena, *from._impl_.config_type_.typed_config_);
        } else {
          _this->_impl_.config_type_.typed_config_->MergeFrom(from._internal_typed_config());
        }
        break;
      }
      case CONFIG_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.config_type_, other->_impl_.config_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class GrpcService_GoogleGrpc_CallCredentials_StsService::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_StsService::GrpcService_GoogleGrpc_CallCredentials_StsService(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_StsService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : token_exchange_service_uri_(arena, from.token_exchange_service_uri_),
        resource_(arena, from.resource_),
        audience_(arena, from.audience_),
        scope_(arena, from.scope_),
        requested_token_type_(arena, from.requested_token_type_),
        subject_token_path_(arena, from.subject_token_path_),
        subject_token_type_(arena, from.subject_token_type_),
        actor_token_path_(arena, from.actor_token_path_),
        actor_token_type_(arena, from.actor_token_type_),
        _cached_size_{0} {}

GrpcService_GoogleGrpc_CallCredentials_StsService::GrpcService_GoogleGrpc_CallCredentials_StsService(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_CallCredentials_StsService& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_CallCredentials_StsService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials_StsService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_exchange_service_uri_(arena),
        resource_(arena),
        audience_(arena),
        scope_(arena),
        requested_token_type_(arena),
        subject_token_path_(arena),
        subject_token_type_(arena),
        actor_token_path_(arena),
        actor_token_type_(arena),
        _cached_size_{0} {}

inline void GrpcService_GoogleGrpc_CallCredentials_StsService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_CallCredentials_StsService::~GrpcService_GoogleGrpc_CallCredentials_StsService() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_CallCredentials_StsService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_exchange_service_uri_.Destroy();
  _impl_.resource_.Destroy();
  _impl_.audience_.Destroy();
  _impl_.scope_.Destroy();
  _impl_.requested_token_type_.Destroy();
  _impl_.subject_token_path_.Destroy();
  _impl_.subject_token_type_.Destroy();
  _impl_.actor_token_path_.Destroy();
  _impl_.actor_token_type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_CallCredentials_StsService::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[50];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.CallCredentials.StsService",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_CallCredentials_StsService::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_exchange_service_uri_.ClearToEmpty();
  _impl_.resource_.ClearToEmpty();
  _impl_.audience_.ClearToEmpty();
  _impl_.scope_.ClearToEmpty();
  _impl_.requested_token_type_.ClearToEmpty();
  _impl_.subject_token_path_.ClearToEmpty();
  _impl_.subject_token_type_.ClearToEmpty();
  _impl_.actor_token_path_.ClearToEmpty();
  _impl_.actor_token_type_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_CallCredentials_StsService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 201, 2> GrpcService_GoogleGrpc_CallCredentials_StsService::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_GoogleGrpc_CallCredentials_StsService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_StsService>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string token_exchange_service_uri = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.token_exchange_service_uri_)}},
    // string resource = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.resource_)}},
    // string audience = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.audience_)}},
    // string scope = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.scope_)}},
    // string requested_token_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.requested_token_type_)}},
    // string subject_token_path = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.subject_token_path_)}},
    // string subject_token_type = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.subject_token_type_)}},
    // string actor_token_path = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.actor_token_path_)}},
    // string actor_token_type = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.actor_token_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_exchange_service_uri = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.token_exchange_service_uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resource = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.resource_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string audience = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.audience_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string scope = 4;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.scope_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string requested_token_type = 5;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.requested_token_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subject_token_path = 6;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.subject_token_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subject_token_type = 7;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.subject_token_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string actor_token_path = 8;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.actor_token_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string actor_token_type = 9;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials_StsService, _impl_.actor_token_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\32\10\10\5\24\22\22\20\20\0\0\0\0\0\0"
    "GrpcService.GoogleGrpc.CallCredentials.StsService"
    "token_exchange_service_uri"
    "resource"
    "audience"
    "scope"
    "requested_token_type"
    "subject_token_path"
    "subject_token_type"
    "actor_token_path"
    "actor_token_type"
  }},
};

::uint8_t* GrpcService_GoogleGrpc_CallCredentials_StsService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token_exchange_service_uri = 1;
  if (!this->_internal_token_exchange_service_uri().empty()) {
    const std::string& _s = this->_internal_token_exchange_service_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.token_exchange_service_uri");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string resource = 2;
  if (!this->_internal_resource().empty()) {
    const std::string& _s = this->_internal_resource();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.resource");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string audience = 3;
  if (!this->_internal_audience().empty()) {
    const std::string& _s = this->_internal_audience();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.audience");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string scope = 4;
  if (!this->_internal_scope().empty()) {
    const std::string& _s = this->_internal_scope();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.scope");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string requested_token_type = 5;
  if (!this->_internal_requested_token_type().empty()) {
    const std::string& _s = this->_internal_requested_token_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.requested_token_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string subject_token_path = 6;
  if (!this->_internal_subject_token_path().empty()) {
    const std::string& _s = this->_internal_subject_token_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_path");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string subject_token_type = 7;
  if (!this->_internal_subject_token_type().empty()) {
    const std::string& _s = this->_internal_subject_token_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_type");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string actor_token_path = 8;
  if (!this->_internal_actor_token_path().empty()) {
    const std::string& _s = this->_internal_actor_token_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_path");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string actor_token_type = 9;
  if (!this->_internal_actor_token_type().empty()) {
    const std::string& _s = this->_internal_actor_token_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_type");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.CallCredentials.StsService)
  return target;
}

::size_t GrpcService_GoogleGrpc_CallCredentials_StsService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_exchange_service_uri = 1;
  if (!this->_internal_token_exchange_service_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token_exchange_service_uri());
  }

  // string resource = 2;
  if (!this->_internal_resource().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_resource());
  }

  // string audience = 3;
  if (!this->_internal_audience().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_audience());
  }

  // string scope = 4;
  if (!this->_internal_scope().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_scope());
  }

  // string requested_token_type = 5;
  if (!this->_internal_requested_token_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_requested_token_type());
  }

  // string subject_token_path = 6;
  if (!this->_internal_subject_token_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject_token_path());
  }

  // string subject_token_type = 7;
  if (!this->_internal_subject_token_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject_token_type());
  }

  // string actor_token_path = 8;
  if (!this->_internal_actor_token_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_actor_token_path());
  }

  // string actor_token_type = 9;
  if (!this->_internal_actor_token_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_actor_token_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_CallCredentials_StsService*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_StsService& from) {
  GrpcService_GoogleGrpc_CallCredentials_StsService* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_exchange_service_uri().empty()) {
    _this->_internal_set_token_exchange_service_uri(from._internal_token_exchange_service_uri());
  }
  if (!from._internal_resource().empty()) {
    _this->_internal_set_resource(from._internal_resource());
  }
  if (!from._internal_audience().empty()) {
    _this->_internal_set_audience(from._internal_audience());
  }
  if (!from._internal_scope().empty()) {
    _this->_internal_set_scope(from._internal_scope());
  }
  if (!from._internal_requested_token_type().empty()) {
    _this->_internal_set_requested_token_type(from._internal_requested_token_type());
  }
  if (!from._internal_subject_token_path().empty()) {
    _this->_internal_set_subject_token_path(from._internal_subject_token_path());
  }
  if (!from._internal_subject_token_type().empty()) {
    _this->_internal_set_subject_token_type(from._internal_subject_token_type());
  }
  if (!from._internal_actor_token_path().empty()) {
    _this->_internal_set_actor_token_path(from._internal_actor_token_path());
  }
  if (!from._internal_actor_token_type().empty()) {
    _this->_internal_set_actor_token_type(from._internal_actor_token_type());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_StsService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_CallCredentials_StsService::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_StsService* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_exchange_service_uri_, &other->_impl_.token_exchange_service_uri_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_, &other->_impl_.resource_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audience_, &other->_impl_.audience_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scope_, &other->_impl_.scope_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requested_token_type_, &other->_impl_.requested_token_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_token_path_, &other->_impl_.subject_token_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_token_type_, &other->_impl_.subject_token_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actor_token_path_, &other->_impl_.actor_token_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actor_token_type_, &other->_impl_.actor_token_type_, arena);
}

// ===================================================================

class GrpcService_GoogleGrpc_CallCredentials::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GrpcService_GoogleGrpc_CallCredentials, _impl_._oneof_case_);
};

void GrpcService_GoogleGrpc_CallCredentials::set_allocated_google_compute_engine(::GrpcService_GoogleGrpc_Empty* google_compute_engine) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (google_compute_engine) {
    ::google::protobuf::Arena* submessage_arena = google_compute_engine->GetArena();
    if (message_arena != submessage_arena) {
      google_compute_engine = ::google::protobuf::internal::GetOwnedMessage(message_arena, google_compute_engine, submessage_arena);
    }
    set_has_google_compute_engine();
    _impl_.credential_specifier_.google_compute_engine_ = google_compute_engine;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.google_compute_engine)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_service_account_jwt_access(::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* service_account_jwt_access) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (service_account_jwt_access) {
    ::google::protobuf::Arena* submessage_arena = service_account_jwt_access->GetArena();
    if (message_arena != submessage_arena) {
      service_account_jwt_access = ::google::protobuf::internal::GetOwnedMessage(message_arena, service_account_jwt_access, submessage_arena);
    }
    set_has_service_account_jwt_access();
    _impl_.credential_specifier_.service_account_jwt_access_ = service_account_jwt_access;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.service_account_jwt_access)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_google_iam(::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* google_iam) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (google_iam) {
    ::google::protobuf::Arena* submessage_arena = google_iam->GetArena();
    if (message_arena != submessage_arena) {
      google_iam = ::google::protobuf::internal::GetOwnedMessage(message_arena, google_iam, submessage_arena);
    }
    set_has_google_iam();
    _impl_.credential_specifier_.google_iam_ = google_iam;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.google_iam)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_from_plugin(::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* from_plugin) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (from_plugin) {
    ::google::protobuf::Arena* submessage_arena = from_plugin->GetArena();
    if (message_arena != submessage_arena) {
      from_plugin = ::google::protobuf::internal::GetOwnedMessage(message_arena, from_plugin, submessage_arena);
    }
    set_has_from_plugin();
    _impl_.credential_specifier_.from_plugin_ = from_plugin;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.from_plugin)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_sts_service(::GrpcService_GoogleGrpc_CallCredentials_StsService* sts_service) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_credential_specifier();
  if (sts_service) {
    ::google::protobuf::Arena* submessage_arena = sts_service->GetArena();
    if (message_arena != submessage_arena) {
      sts_service = ::google::protobuf::internal::GetOwnedMessage(message_arena, sts_service, submessage_arena);
    }
    set_has_sts_service();
    _impl_.credential_specifier_.sts_service_ = sts_service;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.sts_service)
}
GrpcService_GoogleGrpc_CallCredentials::GrpcService_GoogleGrpc_CallCredentials(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc.CallCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GrpcService_GoogleGrpc_CallCredentials::GrpcService_GoogleGrpc_CallCredentials(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc_CallCredentials& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc_CallCredentials* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (credential_specifier_case()) {
    case CREDENTIAL_SPECIFIER_NOT_SET:
      break;
      case kAccessToken:
        new (&_impl_.credential_specifier_.access_token_) decltype(_impl_.credential_specifier_.access_token_){arena, from._impl_.credential_specifier_.access_token_};
        break;
      case kGoogleComputeEngine:
        _impl_.credential_specifier_.google_compute_engine_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_Empty>(arena, *from._impl_.credential_specifier_.google_compute_engine_);
        break;
      case kGoogleRefreshToken:
        new (&_impl_.credential_specifier_.google_refresh_token_) decltype(_impl_.credential_specifier_.google_refresh_token_){arena, from._impl_.credential_specifier_.google_refresh_token_};
        break;
      case kServiceAccountJwtAccess:
        _impl_.credential_specifier_.service_account_jwt_access_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials>(arena, *from._impl_.credential_specifier_.service_account_jwt_access_);
        break;
      case kGoogleIam:
        _impl_.credential_specifier_.google_iam_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials>(arena, *from._impl_.credential_specifier_.google_iam_);
        break;
      case kFromPlugin:
        _impl_.credential_specifier_.from_plugin_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin>(arena, *from._impl_.credential_specifier_.from_plugin_);
        break;
      case kStsService:
        _impl_.credential_specifier_.sts_service_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_StsService>(arena, *from._impl_.credential_specifier_.sts_service_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc_CallCredentials::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : credential_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GrpcService_GoogleGrpc_CallCredentials::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_GoogleGrpc_CallCredentials::~GrpcService_GoogleGrpc_CallCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc_CallCredentials::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_credential_specifier()) {
    clear_credential_specifier();
  }
  _impl_.~Impl_();
}

void GrpcService_GoogleGrpc_CallCredentials::clear_credential_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.CallCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (credential_specifier_case()) {
    case kAccessToken: {
      _impl_.credential_specifier_.access_token_.Destroy();
      break;
    }
    case kGoogleComputeEngine: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.google_compute_engine_;
      }
      break;
    }
    case kGoogleRefreshToken: {
      _impl_.credential_specifier_.google_refresh_token_.Destroy();
      break;
    }
    case kServiceAccountJwtAccess: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.service_account_jwt_access_;
      }
      break;
    }
    case kGoogleIam: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.google_iam_;
      }
      break;
    }
    case kFromPlugin: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.from_plugin_;
      }
      break;
    }
    case kStsService: {
      if (GetArena() == nullptr) {
        delete _impl_.credential_specifier_.sts_service_;
      }
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CREDENTIAL_SPECIFIER_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc_CallCredentials::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[39];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc.CallCredentials",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc_CallCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credential_specifier();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc_CallCredentials::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 5, 79, 2> GrpcService_GoogleGrpc_CallCredentials::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_GoogleGrpc_CallCredentials_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string access_token = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.access_token_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.google_compute_engine_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string google_refresh_token = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.google_refresh_token_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.service_account_jwt_access_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.google_iam_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.from_plugin_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc_CallCredentials, _impl_.credential_specifier_.sts_service_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_Empty>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials_StsService>()},
  }}, {{
    "\46\14\0\24\0\0\0\0"
    "GrpcService.GoogleGrpc.CallCredentials"
    "access_token"
    "google_refresh_token"
  }},
};

::uint8_t* GrpcService_GoogleGrpc_CallCredentials::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc.CallCredentials)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (credential_specifier_case()) {
    case kAccessToken: {
      const std::string& _s = this->_internal_access_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.access_token");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kGoogleComputeEngine: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.credential_specifier_.google_compute_engine_, _impl_.credential_specifier_.google_compute_engine_->GetCachedSize(), target, stream);
      break;
    }
    case kGoogleRefreshToken: {
      const std::string& _s = this->_internal_google_refresh_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.CallCredentials.google_refresh_token");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    case kServiceAccountJwtAccess: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.credential_specifier_.service_account_jwt_access_, _impl_.credential_specifier_.service_account_jwt_access_->GetCachedSize(), target, stream);
      break;
    }
    case kGoogleIam: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.credential_specifier_.google_iam_, _impl_.credential_specifier_.google_iam_->GetCachedSize(), target, stream);
      break;
    }
    case kFromPlugin: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.credential_specifier_.from_plugin_, _impl_.credential_specifier_.from_plugin_->GetCachedSize(), target, stream);
      break;
    }
    case kStsService: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.credential_specifier_.sts_service_, _impl_.credential_specifier_.sts_service_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc.CallCredentials)
  return target;
}

::size_t GrpcService_GoogleGrpc_CallCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (credential_specifier_case()) {
    // string access_token = 1;
    case kAccessToken: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_access_token());
      break;
    }
    // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
    case kGoogleComputeEngine: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.google_compute_engine_);
      break;
    }
    // string google_refresh_token = 3;
    case kGoogleRefreshToken: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_google_refresh_token());
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
    case kServiceAccountJwtAccess: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.service_account_jwt_access_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
    case kGoogleIam: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.google_iam_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
    case kFromPlugin: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.from_plugin_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
    case kStsService: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.credential_specifier_.sts_service_);
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc_CallCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials& from) {
  GrpcService_GoogleGrpc_CallCredentials* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_credential_specifier();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAccessToken: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.access_token_.InitDefault();
        }
        _this->_impl_.credential_specifier_.access_token_.Set(from._internal_access_token(), arena);
        break;
      }
      case kGoogleComputeEngine: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.google_compute_engine_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_Empty>(arena, *from._impl_.credential_specifier_.google_compute_engine_);
        } else {
          _this->_impl_.credential_specifier_.google_compute_engine_->MergeFrom(from._internal_google_compute_engine());
        }
        break;
      }
      case kGoogleRefreshToken: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.google_refresh_token_.InitDefault();
        }
        _this->_impl_.credential_specifier_.google_refresh_token_.Set(from._internal_google_refresh_token(), arena);
        break;
      }
      case kServiceAccountJwtAccess: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.service_account_jwt_access_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials>(arena, *from._impl_.credential_specifier_.service_account_jwt_access_);
        } else {
          _this->_impl_.credential_specifier_.service_account_jwt_access_->MergeFrom(from._internal_service_account_jwt_access());
        }
        break;
      }
      case kGoogleIam: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.google_iam_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials>(arena, *from._impl_.credential_specifier_.google_iam_);
        } else {
          _this->_impl_.credential_specifier_.google_iam_->MergeFrom(from._internal_google_iam());
        }
        break;
      }
      case kFromPlugin: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.from_plugin_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin>(arena, *from._impl_.credential_specifier_.from_plugin_);
        } else {
          _this->_impl_.credential_specifier_.from_plugin_->MergeFrom(from._internal_from_plugin());
        }
        break;
      }
      case kStsService: {
        if (oneof_needs_init) {
          _this->_impl_.credential_specifier_.sts_service_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_CallCredentials_StsService>(arena, *from._impl_.credential_specifier_.sts_service_);
        } else {
          _this->_impl_.credential_specifier_.sts_service_->MergeFrom(from._internal_sts_service());
        }
        break;
      }
      case CREDENTIAL_SPECIFIER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc_CallCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc_CallCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.credential_specifier_, other->_impl_.credential_specifier_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class GrpcService_GoogleGrpc::_Internal {
 public:
  using HasBits = decltype(std::declval<GrpcService_GoogleGrpc>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_._has_bits_);
};

void GrpcService_GoogleGrpc::clear_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GrpcService_GoogleGrpc::GrpcService_GoogleGrpc(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.GoogleGrpc)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        call_credentials_{visibility, arena, from.call_credentials_},
        target_uri_(arena, from.target_uri_),
        stat_prefix_(arena, from.stat_prefix_),
        credentials_factory_name_(arena, from.credentials_factory_name_) {}

GrpcService_GoogleGrpc::GrpcService_GoogleGrpc(
    ::google::protobuf::Arena* arena,
    const GrpcService_GoogleGrpc& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_GoogleGrpc* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_credentials_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_ChannelCredentials>(
                              arena, *from._impl_.channel_credentials_)
                        : nullptr;
  _impl_.config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(
                              arena, *from._impl_.config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_GoogleGrpc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        call_credentials_{visibility, arena},
        target_uri_(arena),
        stat_prefix_(arena),
        credentials_factory_name_(arena) {}

inline void GrpcService_GoogleGrpc::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_credentials_),
           0,
           offsetof(Impl_, config_) -
               offsetof(Impl_, channel_credentials_) +
               sizeof(Impl_::config_));
}
GrpcService_GoogleGrpc::~GrpcService_GoogleGrpc() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_GoogleGrpc::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.target_uri_.Destroy();
  _impl_.stat_prefix_.Destroy();
  _impl_.credentials_factory_name_.Destroy();
  delete _impl_.channel_credentials_;
  delete _impl_.config_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_GoogleGrpc::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[23];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_._cached_size_),
          true,
      },
      "GrpcService.GoogleGrpc",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_GoogleGrpc::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.call_credentials_.Clear();
  _impl_.target_uri_.ClearToEmpty();
  _impl_.stat_prefix_.ClearToEmpty();
  _impl_.credentials_factory_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.channel_credentials_ != nullptr);
      _impl_.channel_credentials_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_GoogleGrpc::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 76, 2> GrpcService_GoogleGrpc::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_GoogleGrpc_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target_uri = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.target_uri_)}},
    // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.channel_credentials_)}},
    // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.call_credentials_)}},
    // string stat_prefix = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.stat_prefix_)}},
    // string credentials_factory_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.credentials_factory_name_)}},
    // .google.protobuf.Struct config = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 2, PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.config_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target_uri = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.target_uri_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.channel_credentials_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.call_credentials_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string stat_prefix = 4;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.stat_prefix_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string credentials_factory_name = 5;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.credentials_factory_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Struct config = 6;
    {PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.config_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_ChannelCredentials>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc_CallCredentials>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Struct>()},
  }}, {{
    "\26\12\0\0\13\30\0\0"
    "GrpcService.GoogleGrpc"
    "target_uri"
    "stat_prefix"
    "credentials_factory_name"
  }},
};

::uint8_t* GrpcService_GoogleGrpc::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.GoogleGrpc)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string target_uri = 1;
  if (!this->_internal_target_uri().empty()) {
    const std::string& _s = this->_internal_target_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.target_uri");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.channel_credentials_, _impl_.channel_credentials_->GetCachedSize(), target, stream);
  }

  // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_call_credentials_size());
       i < n; i++) {
    const auto& repfield = this->_internal_call_credentials().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string stat_prefix = 4;
  if (!this->_internal_stat_prefix().empty()) {
    const std::string& _s = this->_internal_stat_prefix();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.stat_prefix");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string credentials_factory_name = 5;
  if (!this->_internal_credentials_factory_name().empty()) {
    const std::string& _s = this->_internal_credentials_factory_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.GoogleGrpc.credentials_factory_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .google.protobuf.Struct config = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.config_, _impl_.config_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.GoogleGrpc)
  return target;
}

::size_t GrpcService_GoogleGrpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
  total_size += 1UL * this->_internal_call_credentials_size();
  for (const auto& msg : this->_internal_call_credentials()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string target_uri = 1;
  if (!this->_internal_target_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_target_uri());
  }

  // string stat_prefix = 4;
  if (!this->_internal_stat_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_stat_prefix());
  }

  // string credentials_factory_name = 5;
  if (!this->_internal_credentials_factory_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_credentials_factory_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_credentials_);
    }

    // .google.protobuf.Struct config = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.config_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_GoogleGrpc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_GoogleGrpc*>(
      &from));
}

void GrpcService_GoogleGrpc::MergeFrom(const GrpcService_GoogleGrpc& from) {
  GrpcService_GoogleGrpc* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_call_credentials()->MergeFrom(
      from._internal_call_credentials());
  if (!from._internal_target_uri().empty()) {
    _this->_internal_set_target_uri(from._internal_target_uri());
  }
  if (!from._internal_stat_prefix().empty()) {
    _this->_internal_set_stat_prefix(from._internal_stat_prefix());
  }
  if (!from._internal_credentials_factory_name().empty()) {
    _this->_internal_set_credentials_factory_name(from._internal_credentials_factory_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.channel_credentials_ != nullptr);
      if (_this->_impl_.channel_credentials_ == nullptr) {
        _this->_impl_.channel_credentials_ =
            ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc_ChannelCredentials>(arena, *from._impl_.channel_credentials_);
      } else {
        _this->_impl_.channel_credentials_->MergeFrom(*from._impl_.channel_credentials_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ =
            ::google::protobuf::MessageLite::CopyConstruct<::google::protobuf::Struct>(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_GoogleGrpc::CopyFrom(const GrpcService_GoogleGrpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_GoogleGrpc::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc::InternalSwap(GrpcService_GoogleGrpc* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.call_credentials_.InternalSwap(&other->_impl_.call_credentials_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_uri_, &other->_impl_.target_uri_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stat_prefix_, &other->_impl_.stat_prefix_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.credentials_factory_name_, &other->_impl_.credentials_factory_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.config_)
      + sizeof(GrpcService_GoogleGrpc::_impl_.config_)
      - PROTOBUF_FIELD_OFFSET(GrpcService_GoogleGrpc, _impl_.channel_credentials_)>(
          reinterpret_cast<char*>(&_impl_.channel_credentials_),
          reinterpret_cast<char*>(&other->_impl_.channel_credentials_));
}

// ===================================================================

class GrpcService_HeaderValue::_Internal {
 public:
};

GrpcService_HeaderValue::GrpcService_HeaderValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService.HeaderValue)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_HeaderValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

GrpcService_HeaderValue::GrpcService_HeaderValue(
    ::google::protobuf::Arena* arena,
    const GrpcService_HeaderValue& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService_HeaderValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GrpcService.HeaderValue)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService_HeaderValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void GrpcService_HeaderValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService_HeaderValue::~GrpcService_HeaderValue() {
  // @@protoc_insertion_point(destructor:GrpcService.HeaderValue)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService_HeaderValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GrpcService_HeaderValue::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[24];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService_HeaderValue, _impl_._cached_size_),
          true,
      },
      "GrpcService.HeaderValue",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService_HeaderValue::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.HeaderValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService_HeaderValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> GrpcService_HeaderValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GrpcService_HeaderValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService_HeaderValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_HeaderValue, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GrpcService_HeaderValue, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService_HeaderValue, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService_HeaderValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\5\0\0\0\0\0"
    "GrpcService.HeaderValue"
    "key"
    "value"
  }},
};

::uint8_t* GrpcService_HeaderValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService.HeaderValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.HeaderValue.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GrpcService.HeaderValue.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService.HeaderValue)
  return target;
}

::size_t GrpcService_HeaderValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.HeaderValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService_HeaderValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService_HeaderValue*>(
      &from));
}

void GrpcService_HeaderValue::MergeFrom(const GrpcService_HeaderValue& from) {
  GrpcService_HeaderValue* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.HeaderValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService_HeaderValue::CopyFrom(const GrpcService_HeaderValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService_HeaderValue::IsInitialized() const {
  return true;
}

void GrpcService_HeaderValue::InternalSwap(GrpcService_HeaderValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

// ===================================================================

class GrpcService::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GrpcService, _impl_._oneof_case_);
};

void GrpcService::set_allocated_envoy_grpc(::GrpcService_EnvoyGrpc* envoy_grpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_target_specifier();
  if (envoy_grpc) {
    ::google::protobuf::Arena* submessage_arena = envoy_grpc->GetArena();
    if (message_arena != submessage_arena) {
      envoy_grpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, envoy_grpc, submessage_arena);
    }
    set_has_envoy_grpc();
    _impl_.target_specifier_.envoy_grpc_ = envoy_grpc;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.envoy_grpc)
}
void GrpcService::set_allocated_google_grpc(::GrpcService_GoogleGrpc* google_grpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_target_specifier();
  if (google_grpc) {
    ::google::protobuf::Arena* submessage_arena = google_grpc->GetArena();
    if (message_arena != submessage_arena) {
      google_grpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, google_grpc, submessage_arena);
    }
    set_has_google_grpc();
    _impl_.target_specifier_.google_grpc_ = google_grpc;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.google_grpc)
}
GrpcService::GrpcService(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GrpcService)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : initial_metadata_{visibility, arena, from.initial_metadata_},
        target_specifier_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GrpcService::GrpcService(
    ::google::protobuf::Arena* arena,
    const GrpcService& from)
    : ::google::protobuf::MessageLite(arena) {
  GrpcService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (target_specifier_case()) {
    case TARGET_SPECIFIER_NOT_SET:
      break;
      case kEnvoyGrpc:
        _impl_.target_specifier_.envoy_grpc_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_EnvoyGrpc>(arena, *from._impl_.target_specifier_.envoy_grpc_);
        break;
      case kGoogleGrpc:
        _impl_.target_specifier_.google_grpc_ = ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc>(arena, *from._impl_.target_specifier_.google_grpc_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GrpcService)
}
inline PROTOBUF_NDEBUG_INLINE GrpcService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : initial_metadata_{visibility, arena},
        target_specifier_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GrpcService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GrpcService::~GrpcService() {
  // @@protoc_insertion_point(destructor:GrpcService)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void GrpcService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_target_specifier()) {
    clear_target_specifier();
  }
  _impl_.~Impl_();
}

void GrpcService::clear_target_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (target_specifier_case()) {
    case kEnvoyGrpc: {
      if (GetArena() == nullptr) {
        delete _impl_.target_specifier_.envoy_grpc_;
      }
      break;
    }
    case kGoogleGrpc: {
      if (GetArena() == nullptr) {
        delete _impl_.target_specifier_.google_grpc_;
      }
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TARGET_SPECIFIER_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GrpcService::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[12];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(GrpcService, _impl_._cached_size_),
          true,
      },
      "GrpcService",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void GrpcService::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initial_metadata_.Clear();
  clear_target_specifier();
  _internal_metadata_.Clear<std::string>();
}

const char* GrpcService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> GrpcService::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967276,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GrpcService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GrpcService>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .GrpcService.HeaderValue initial_metadata = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(GrpcService, _impl_.initial_metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .GrpcService.EnvoyGrpc envoy_grpc = 1;
    {PROTOBUF_FIELD_OFFSET(GrpcService, _impl_.target_specifier_.envoy_grpc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .GrpcService.GoogleGrpc google_grpc = 2;
    {PROTOBUF_FIELD_OFFSET(GrpcService, _impl_.target_specifier_.google_grpc_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .GrpcService.HeaderValue initial_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(GrpcService, _impl_.initial_metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::GrpcService_EnvoyGrpc>()},
    {::_pbi::TcParser::GetTable<::GrpcService_GoogleGrpc>()},
    {::_pbi::TcParser::GetTable<::GrpcService_HeaderValue>()},
  }}, {{
  }},
};

::uint8_t* GrpcService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GrpcService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (target_specifier_case()) {
    case kEnvoyGrpc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.target_specifier_.envoy_grpc_, _impl_.target_specifier_.envoy_grpc_->GetCachedSize(), target, stream);
      break;
    }
    case kGoogleGrpc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.target_specifier_.google_grpc_, _impl_.target_specifier_.google_grpc_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // repeated .GrpcService.HeaderValue initial_metadata = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_initial_metadata_size());
       i < n; i++) {
    const auto& repfield = this->_internal_initial_metadata().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GrpcService)
  return target;
}

::size_t GrpcService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcService.HeaderValue initial_metadata = 5;
  total_size += 1UL * this->_internal_initial_metadata_size();
  for (const auto& msg : this->_internal_initial_metadata()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  switch (target_specifier_case()) {
    // .GrpcService.EnvoyGrpc envoy_grpc = 1;
    case kEnvoyGrpc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.target_specifier_.envoy_grpc_);
      break;
    }
    // .GrpcService.GoogleGrpc google_grpc = 2;
    case kGoogleGrpc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.target_specifier_.google_grpc_);
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GrpcService::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const GrpcService*>(
      &from));
}

void GrpcService::MergeFrom(const GrpcService& from) {
  GrpcService* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GrpcService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_initial_metadata()->MergeFrom(
      from._internal_initial_metadata());
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_target_specifier();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kEnvoyGrpc: {
        if (oneof_needs_init) {
          _this->_impl_.target_specifier_.envoy_grpc_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_EnvoyGrpc>(arena, *from._impl_.target_specifier_.envoy_grpc_);
        } else {
          _this->_impl_.target_specifier_.envoy_grpc_->MergeFrom(from._internal_envoy_grpc());
        }
        break;
      }
      case kGoogleGrpc: {
        if (oneof_needs_init) {
          _this->_impl_.target_specifier_.google_grpc_ =
              ::google::protobuf::MessageLite::CopyConstruct<::GrpcService_GoogleGrpc>(arena, *from._impl_.target_specifier_.google_grpc_);
        } else {
          _this->_impl_.target_specifier_.google_grpc_->MergeFrom(from._internal_google_grpc());
        }
        break;
      }
      case TARGET_SPECIFIER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GrpcService::CopyFrom(const GrpcService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GrpcService::IsInitialized() const {
  return true;
}

void GrpcService::InternalSwap(GrpcService* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.initial_metadata_.InternalSwap(&other->_impl_.initial_metadata_);
  swap(_impl_.target_specifier_, other->_impl_.target_specifier_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
